import alumno.*
import carrera.*
import materia.*
import registro.*


describe "test" {
	const mate1 = new MateriaQueRequiere250Creditos(creditosQueOtorga = 30, anioAlQuePertenece=1, cupo = 40, carreraEnLaQueFigura = 0)
	const ingles = new MateriaSinRequisitos(creditosQueOtorga = 20, anioAlQuePertenece=2, cupo = 2, carreraEnLaQueFigura = 0)
	const obj2 = new MateriaQueRequiereCorrelativas(creditosQueOtorga = 30, anioAlQuePertenece=2, cupo = 40, carreraEnLaQueFigura = 0)
	const obj3 = new MateriaQueRequiereAprobarAnioAnterior(creditosQueOtorga = 30, anioAlQuePertenece=3, cupo = 40, carreraEnLaQueFigura = 0)
	const epyl = new MateriaSinRequisitos(creditosQueOtorga = 30, anioAlQuePertenece=1, cupo = 40, carreraEnLaQueFigura = 0)
	const tfinal = new MateriaQueRequiere250Creditos(creditosQueOtorga = 30, anioAlQuePertenece=2, cupo = 40, carreraEnLaQueFigura = 0)
	const li = new Carrera(materias=[mate1])
	const tpi = new Carrera(materias=[obj2, epyl, tfinal, ingles])
	const unq = new Universidad(carreras=[tpi, li])
	const juan = new Alumno(carrerasCursando= [tpi, li], materiasAprobadas = [epyl])
	const pedro = new Alumno(carrerasCursando= [tpi, li], materiasAprobadas = [])
	const mario = new Alumno(carrerasCursando= [tpi], materiasAprobadas = [])	

fixture {
	mate1.carreraEnLaQueFigura(li)
	ingles.carreraEnLaQueFigura(tpi)
	obj3.carreraEnLaQueFigura(tpi)
	epyl.carreraEnLaQueFigura(tpi)
	tfinal.carreraEnLaQueFigura(tpi)
	obj2.carreraEnLaQueFigura(tpi)
	obj2.agregarCorrelativas(tfinal)
}

test "1" {
	assert.notThat(juan.puedeCursar(epyl, tpi))
}

test "2" {
	assert.notThat(juan.puedeCursar(obj2, tpi))
}

test "3" {
	unq.inscribir(pedro, ingles, tpi)
	unq.inscribir(mario, ingles, tpi)
	unq.inscribir(juan, ingles, tpi)
	assert.equals(2, ingles.estudiantesInscriptos().size())
	assert.equals([juan], ingles.estudiantesEnListaDeEspera())
}

}